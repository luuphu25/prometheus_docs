Method monitoring
===========================================
Nhiều service có thể bị ảnh hưởng hiệu suất do nền tảng OS mà nó chạy phía trên (linux). Đặc biệt việc monitor tài nguyên hệ thống của Linux càng cần thiết nếu ứng dụng nhạy cảm với tài nguyên hệ thống ( như I/O cần thiết cho DB service)  

 

Đối với Linux, ta cần quan tâm nhất là CPU, Disk, một phần memory (cho saturation) và network . Thực chất Network hiện nay khá khó overload ( tầng OS) nên phần lớn vẫn dựa vào monitor ở service ( lantency, rate) … 

Tuy nhiên cũng có thể monitor rate của IN/OUT network để cung cấp khả năng phát hiện các hoạt động bất thường đối với hệ thống với việc phổi hợp các metrics khác.  

 

**## CPU**

Khía cạnh thực tế cần quan tâm là Saturation và Utilization.  

Saturation:  Để dễ dàng người ta thường đánh giá Load_avg(the number of processes using CPU or waiting for system resources (usually CPU and disk) .Tuy nhiên trong Linux Load Avg là gộp chung cả CPU và Disk I/O nên có thể làm khó phân biệt cụ thể.  Nếu service của hệ thông không hoạt động I/O nhiều thì chỉ số Load Avg có thể dùng đánh giá CPU saturation. Nhìn chung metric này vẫn cho ta nhận định được hệ thống có vấn đề không => xem xét các metrics cụ thể hơn của CPU và Disk  

Ta có thể xem xét các  

Đối với các server hypervisor ta có thể quan tâm thêm %Steal time., steal time nếu cao cũng chỉ ra CPU đang bị đầy.  Nếu %steam > 20 % thì cần nên xem xét hoạt động của server [1]_

  

[Percona] https://www.percona.com/blog/2017/08/04/saturation-metrics-in-pmm-120/ 

https://pmmdemo.percona.com/graph/d/qyzrQGHmk/system-overview?refresh=1m&panelId=33&fullscreen&orgId=1&var-interval=$__auto_interval&var-host=ps56&from=now-12h&to=now 

 

Nên chú ý metrics CPU saturation sẽ không có nhiều ý nghĩ nếu hệ thống chạy service single-thread Nodejs server, Nginx … khi đó cần đánh giá CPU Utilization  

 

#Utilization (% time mà tài nguyên đang hoạt động - the average time that the resource was busy servicing work 

Ta tính tổng %  

 

sum CPU %: User + Nice + System + (probably) Steal 

 

 

Cần lưu ý tới I/O wait nếu chỉ số I/O wait cao là dấu hiệu hệ thống disk có bottleneck và làm chậm hệ thống  

Softirq cao có thể là dấu hiệu có vấn đề ở thiết bị mạng  

Nếu chỉ số idle = 0 trong 1 khoảng thời gian => khả năng xử lý của CPU tới giới hạn  

https://singapore.my-netdata.io/default.html#menu_system_submenu_cpu;theme=slate;help=true 

## Memory:  

Đối vơi memory ta cũng chỉ quan tâm tới Saturation và Utilization  

Saturation : Bất ki việc swap nào đều thể hiện việc thiếu RAM.  Tuy nhiên trên các OS linux khi chỉ số swappiness được set !=1 , thì có thể có tình trạng swap trước khi Ram được sử dụng hết điều này là do kernel ko giảm các cache khi thực hiện swap nên bộ nhớ của bạn có thể cạn kiệt trước khi toàn bộ RAM đều đầy bởi hoạt động của các tiến trình.  

Cũng nên theo dõi OOM error (OUT of Memory) : khi RAM bị đầy nghiêm trọng, OS sẽ tự động kill process user chiếm nhiều RAM và đó có thể là service MySQL, server .. 

Utilization: Tính toán % lượng Ram có thể sử dụng (free + buffer + cache) 

Paging and Swaping: ( IBM read books ) 

Paging : di chuyển các page độc lập qua swap space trên disk ( page là đơn vị tổ chức địa chỉ nhớ trên Linux).  

Swap: di chuyển cả vùng nhớ của tiến trình qua vùng swap.  

Nếu system luôn thực hiện paging qua disk ( chỉ số paging out cao) => cần thêm ram cho server. Còn nếu rate của page_out thấp thì ko ảnh hưởng tới hiệu suất của hệ thống 

  

A page fault is a type of interrupt, called trap, raised by computer hardware when a running program accesses a memory page that is mapped into the virtual address space, but not actually loaded into main memory. If the page is loaded in memory at the time the fault is generated, but is not marked in the memory management unit as being loaded in memory, then it is called a minor or soft page fault. A major page fault is generated when the system needs to load the memory page from disk or swap memory. 

--- 

 

## Disk : 

Request Rate : chỉ số IOPS của disk system ( r/s và w/s) 

Error Rate: Không có lỗi cụ thể trên hệ thống đĩa ngoại trừ độ trễ quá cao. Hầu hết lỗi có thẻ xảy ra liên quan tới kiểu file hệ thống: ext4 hay nfs đều khó phát hiện và thường tìm thông qua kernel log.  

Latency: Cần theo dõi cả read và write time.và chỉ số trễ thường tăng cao nếu disk bị bão hòa.  

Utilization: nghĩa là đĩa đang thực hiện công việc nào đó. Thường thì 100% chỉ ra tình trạng đĩa có thể bị tắc nghẽn. 

Saturation: sử dụng %util, ko quá chính xác nhưng đó đủ cho 1 hệ thông monitor đơn giản 

 

Disk system là thành phần trọng yếu trong việc monitor server do nó có thể ảnh hưởng lớn tới khả năng hoạt động của service. Đồng thời cũng là nơi thường gặp vấn đề nhất. Tuy nhiên cũng có những vấn đề bị che dấu gián tiếp bởi các thành phần khác. ( IBM red book)  như thiết RAM, CPU sử dụng cao bởi các tiến trình đang đợi I/O  

Disk chậm có thể là kết quả của:  

Memory buffer bị đầy bởi dữ liệu cần ghi => Delay request vì không còn free mem để thực hiện write request hoặc response phải đợi dữ liệu được đọc từ disk 

Thiếu Ram, không đủ buffer cho network request -> lỗi ghi đồng bộ  

Disk utilization, controller utilization 

Disk chưa hoàn thành ( châm) -được thể hiện bở response time cao hay network utilization thấp  

Disk I/O thời gian dài -> hàng đợi full -> CPU high idle + low utilization do đợi requests tiếp theo.  
 


## Network: 

Rate: READ/WRITE bandwidth / s  

Utilization:  Read/write bandwith / total bandwitdth  

 

 .. [1]  https://scoutapp.com/blog/understanding-cpu-steal-time-when-should-you-be-worried 


 

 
